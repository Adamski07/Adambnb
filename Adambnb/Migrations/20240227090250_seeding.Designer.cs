// <auto-generated />
using System;
using Adambnb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Adambnb.Migrations
{
    [DbContext(typeof(AdambnbContext))]
    [Migration("20240227090250_seeding")]
    partial class seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Adambnb.Models.Costumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Costumers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane@example.com",
                            FirstName = "Jane",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("Adambnb.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCover")
                        .HasColumnType("bit");

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LandLordId")
                        .IsUnique();

                    b.HasIndex("LocationId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCover = true,
                            LandLordId = 1,
                            LocationId = 1,
                            Url = "image1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            IsCover = true,
                            LandLordId = 2,
                            LocationId = 2,
                            Url = "image2.jpg"
                        });
                });

            modelBuilder.Entity("Adambnb.Models.LandLord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LandLords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 35,
                            FirstName = "Landlord1",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Age = 40,
                            FirstName = "Landlord2",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("Adambnb.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<float>("PricePerDay")
                        .HasColumnType("real");

                    b.Property<int>("Rooms")
                        .HasColumnType("int");

                    b.Property<string>("Subtitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandLordId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description1",
                            FeaturesList = "[2,3]",
                            LandLordId = 1,
                            NumberOfGuests = 4,
                            PricePerDay = 100f,
                            Rooms = 2,
                            Subtitle = "Subtitle1",
                            Title = "Location1",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description2",
                            FeaturesList = "[0,1]",
                            LandLordId = 2,
                            NumberOfGuests = 6,
                            PricePerDay = 150f,
                            Rooms = 3,
                            Subtitle = "Subtitle2",
                            Title = "Location2",
                            Type = 5
                        });
                });

            modelBuilder.Entity("Adambnb.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CostumerId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.HasIndex("LocationId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostumerId = 1,
                            Discount = 10f,
                            EndDate = new DateTime(2024, 3, 1, 10, 2, 49, 651, DateTimeKind.Local).AddTicks(582),
                            LocationId = 1,
                            StartDate = new DateTime(2024, 2, 27, 10, 2, 49, 651, DateTimeKind.Local).AddTicks(509)
                        },
                        new
                        {
                            Id = 2,
                            CostumerId = 2,
                            Discount = 5f,
                            EndDate = new DateTime(2024, 3, 3, 10, 2, 49, 651, DateTimeKind.Local).AddTicks(591),
                            LocationId = 2,
                            StartDate = new DateTime(2024, 2, 27, 10, 2, 49, 651, DateTimeKind.Local).AddTicks(589)
                        });
                });

            modelBuilder.Entity("Adambnb.Models.Image", b =>
                {
                    b.HasOne("Adambnb.Models.LandLord", "LandLord")
                        .WithOne("Avatar")
                        .HasForeignKey("Adambnb.Models.Image", "LandLordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adambnb.Models.Location", "Location")
                        .WithMany("Images")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LandLord");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Adambnb.Models.Location", b =>
                {
                    b.HasOne("Adambnb.Models.LandLord", "LandLord")
                        .WithMany("Locations")
                        .HasForeignKey("LandLordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("Adambnb.Models.Reservation", b =>
                {
                    b.HasOne("Adambnb.Models.Costumer", "Costumer")
                        .WithMany("Reservations")
                        .HasForeignKey("CostumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adambnb.Models.Location", "Location")
                        .WithMany("Reservations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Costumer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Adambnb.Models.Costumer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Adambnb.Models.LandLord", b =>
                {
                    b.Navigation("Avatar")
                        .IsRequired();

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Adambnb.Models.Location", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
